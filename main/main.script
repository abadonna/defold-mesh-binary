
local function load_scene(self, id)
	if self.demo then
		msg.post("#" .. self.demo, "unload")
	end
	self.demo = id
	msg.post("#" .. self.demo, "async_load")
end

function init(self)
	
	local data, error = sys.load_resource("/assets/Montserrat-Regular.ttf")
	self.font = imgui.font_add_ttf_data(data, #data, 32, 32)
	imgui.set_ini_filename()

	load_scene(self, "complex")
end

function update(self, dt)
	imgui.set_next_window_size(500, 200)
	
	imgui.begin_window("Blender export demo")
	imgui.font_push(self.font)

	local changed, checked = imgui.checkbox("dancer animation", self.demo == "dancer")
	if changed and checked then
		load_scene(self, "dancer")
	end
	
	changed, checked = imgui.checkbox("complex girl", self.demo == "complex")
	if changed and checked then
		load_scene(self, "complex")
	end
	imgui.font_pop()
	imgui.end_window()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		msg.post(sender, "init")
		msg.post(sender, "enable")
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end

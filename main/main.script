
local function load_scene(self, id)
	if self.demo then
		--msg.post(self.demo .. ":/model", "reset")
		msg.post("#" .. self.demo, "unload")
		self.demo = id
		return
	end
	self.demo = id
	msg.post("#" .. self.demo, "async_load")
end

function init(self)
	msg.post("@render:", "clear_color", {color = vmath.vector4(.5, 0.5,0.5, 1)})
	
	local data, error = sys.load_resource("/assets/Montserrat-Regular.ttf")
	self.font = imgui.font_add_ttf_data(data, #data, 32, 32)
	imgui.set_ini_filename()

	load_scene(self, "mixamo")
end

function update(self, dt)
	imgui.set_next_window_size(500, 200)
	
	imgui.begin_window("Blender export demo")
	imgui.font_push(self.font)

	local changed, checked = imgui.checkbox("dancer animation", self.demo == "dancer")
	if changed and checked then
		load_scene(self, "dancer")
	end
	
	changed, checked = imgui.checkbox("complex girl", self.demo == "complex")
	if changed and checked then
		load_scene(self, "complex")
	end

	changed, checked = imgui.checkbox("mixamo", self.demo == "mixamo")
	if changed and checked then
		load_scene(self, "mixamo")
	end
	
	imgui.font_pop()
	imgui.end_window()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		msg.post(sender, "init")
		msg.post(sender, "enable")
	elseif message_id == hash("proxy_unloaded") then
		msg.post("#" .. self.demo, "async_load")
	end
end
